import hamming_distance
def approximate_pattern_count(text, pattern, d):
	count = 0
	for i in range(len(text)-len(pattern)+1):
		pat = text[i:i+len(pattern)]
		if hamming_distance.hamming_distance(pat, pattern) <= d:
			count = count + 1
	return count

print approximate_pattern_count('CCAGATCTCCCACCCCTGCAGCCCTTTCATTTGATGTCAGCAGTGGCCTCGGCCGGCCGCTCCGTCGAGGGAAACTTATATCTGCGCGGGAACGATGATCTTTACCGAGTGACGCCACACCAACGTGGGCGCACTTTAACCGCCAGGTTGAACACGCACAGCTCGCCCATACATCCATTCTATAATATACCATGGACAGCAAAATGGGAATGGCTGGACAGCAAGAGATCTAAGGAACATGTCAAACGTCATAGGAATCTTACGACATGCTACTACAAATCAGGGGATGTGACTCGCTCGAGAGATCGGGTGTTGTGTAGCGCGCATGGCAGTGGCTCCG', 'CTTTCA', 2)